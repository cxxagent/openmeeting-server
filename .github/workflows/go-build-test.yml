name: Go Build Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  go-build:
    name: Test with go ${{ matrix.go_version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
      pull-requests: write
    strategy:
      matrix:
        os: [ubuntu-latest]
        go_version: ["1.21.x", "1.22.x"]

    steps:
      - name: Checkout Server repository
        uses: actions/checkout@v4

      - name: Set up Go ${{ matrix.go_version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go_version }}

      - name: Get Server dependencies
        run: |
          go install github.com/magefile/mage@latest
          go mod tidy
          go mod download

      - name: Set up infra services
        uses: hoverkraft-tech/compose-action@v2.0.1
        # #  Uncomment and set the correct path to your docker-compose file
        #  with:
        #    compose-file: "./docker/docker-compose.yml"

      - name: Build and test Server Services
        run: |
          mage build
          mage start
          mage check

  dockerfile-test:
    name: Build and Test Dockerfile
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go_version: ["1.21"]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Go ${{ matrix.go_version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go_version }}

      - name: Get dependencies
        run: |
          go mod tidy
          go mod download
          go install github.com/magefile/mage@latest

      - name: Build Docker Image
        run: |
          IMAGE_NAME="${{ github.event.repository.name }}-test"
          CONTAINER_NAME="${{ github.event.repository.name }}-container"
          docker build -t $IMAGE_NAME .

      - name: Run Docker Container
        run: |
          IMAGE_NAME="${{ github.event.repository.name }}-test"
          CONTAINER_NAME="${{ github.event.repository.name }}-container"
          docker run --name $CONTAINER_NAME -d $IMAGE_NAME
          docker ps -a
          docker exec -i $CONTAINER_NAME mage check

      - name: Test Docker Container Logs
        run: |
          CONTAINER_NAME="${{ github.event.repository.name }}-container"
          docker logs $CONTAINER_NAME

      # - name: Cleanup Docker Container
      #   run: |
      #     CONTAINER_NAME="${{ github.event.repository.name }}-container"
      #     IMAGE_NAME="${{ github.event.repository.name }}-test"
      #     docker stop $CONTAINER_NAME
      #     docker rm $CONTAINER_NAME
      #     docker rmi $IMAGE_NAME
